// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  id       Int      @id @default(autoincrement()) @db.UnsignedInt()
  name     String
  loginID  String   @unique @map("login_id")
  loginPwd String   @map("login_pwd")
  createAt DateTime @default(now()) @map("create_at")
  updateAt DateTime @updatedAt() @map("update_at")

  @@map("admin_user") //管理员用户表
}

model banner {
  id          Int      @id @default(autoincrement()) @db.UnsignedInt()
  midImg      String   @map("mid_img")
  bigImg      String   @map("big_img")
  title       String
  description String
  createAt    DateTime @default(now()) @map("create_at")
  updateAt    DateTime @updatedAt() @map("update_at")

  @@map("banner") //banner表
}

model blogType {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt()
  name         String
  articleCount Int      @map("article_count")
  order        Int
  blogs        blog[]
  createAt     DateTime @default(now()) @map("create_at")
  updateAt     DateTime @updatedAt() @map("update_at")

  @@map("category") //类型表
}

model blog {
  id            Int      @id @default(autoincrement()) @db.UnsignedInt()
  title         String
  description   String   @db.Text
  toc           String   @db.Text
  htmlContent   String   @map("html_content") @db.Text
  thumb         String
  scanNumber    Int      @map("scan_number")
  commentNumber Int      @map("comment_number")
  createAt      DateTime @default(now()) @map("create_at")
  updateAt      DateTime @updatedAt() @map("update_at")
  blogType      blogType @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    Int      @map("category_id") @db.UnsignedInt()

  @@map("blog") //博客表
}

model demo {
  id          Int      @id @default(autoincrement()) @db.UnsignedInt()
  name        String
  url         String
  github      String
  description String   @db.Text
  thumb       String
  order       Int
  createAt    DateTime @default(now()) @map("create_at")
  updateAt    DateTime @updatedAt() @map("update_at")

  @@map("project_demo")
}

model message {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt()
  nickname   String
  content    String
  createDate String   @map("create_date")
  avatar     String
  createAt   DateTime @default(now()) @map("create_at")
  updateAt   DateTime @updatedAt() @map("update_at")

  @@map("message")
}
